{
  "folders": [
    {
      "name": "üåø testing",
      "path": "."
    },
    {
      "path": "./content/themes/testing",
      "name": "üé® Theme"
    }
  ],
  "settings": {
    "git.inputValidation": true,
    "git.inputValidationLength": 72,
    "git.inputValidationSubjectLength": 72,
    "git.confirmSync": false,
    "git.autofetch": true,
    "git.enableSmartCommit": true,
    "git.suggestSmartCommit": true,
    "git.autoStash": true,
    "git.allowNoVerifyCommit": false,
    "editor.formatOnSave": false,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit",
      "source.organizeImports": "explicit",
      "source.fixAll": "explicit"
    },
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "search.exclude": {
      "**/node_modules": true,
      "**/vendor": true,
      "**/.lando": true,
      "**/public/build": true,
      "**/dist": true,
      "**/.git": true,
      "**/wp": true
    },
    "files.exclude": {
      "**/node_modules": true,
      "**/vendor": true,
      "**/.git": true,
      "**/.DS_Store": true,
      "**/Thumbs.db": true
    },
    "extensions.ignoreRecommendations": false,
    "emmet.includeLanguages": {
      "blade": "html",
      "php": "html"
    },
    "files.autoSave": "onFocusChange",
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "git.verboseCommit": true,
    "git.useCommitInputAsStashMessage": true,
    "git.promptToSaveFilesBeforeCommit": "always",
    "git.smartCommitChanges": "tracked",
    "git.allowForcePush": false,
    "git.alwaysSignOff": false,
    "git.enableCommitSigning": true,
    "conventionalCommits.emojiFormat": "emoji",
    "conventionalCommits.showEditor": true,
    "conventionalCommits.silent": false,
    "conventionalCommits.autoCommit": false,
    "conventionalCommits.promptBody": true,
    "conventionalCommits.promptFooter": true,
    "conventionalCommits.promptScope": true,
    "conventionalCommits.scopes": [
      "ui",
      "api",
      "auth",
      "config",
      "deps",
      "docs",
      "tests",
      "build",
      "ci",
      "theme",
      "plugin",
      "database",
      "security",
      "performance",
      "core",
      "docker",
      "lando"
    ],
    "conventionalCommits.gitmoji": false,
    "conventionalCommits.lineBreak": "\\n",
    "gitlens.ai.experimental.generateCommitMessage.enabled": true,
    "gitlens.experimental.generateCommitMessage.enabled": true,
    "gitlens.ai.experimental.generateCommitMessage.model": "gpt-4",
    "gitlens.ai.experimental.generateCommitMessage.maxTokens": 200,
    "gitlens.ai.experimental.generateCommitMessage.temperature": 0.2,

    "gitlens.ai.generateCommitMessage.customInstructions": "Always write commit messages in English.  Follow the Conventional Commits format: <type>(<scope>): <description>  Valid types: feat, fix, docs, style, refactor, perf, test, chore, ci, build, revert, release, merge, resolve Scopes must be in lowercase. Description must be imperative, short, and clear (max 100 characters).  Examples: feat(core): add avatar upload functionality fix(auth): resolve login issue docs(readme): update setup instructions",
    "gitlens.ai.generateCommits.customInstructions": "ALWAYS follow the Conventional Commits format when creating commit messages, especially when using \"generate commit message\" or when asked to commit code automatically.\n\nFormat: `<type>[optional scope]: <description>`\n\nAvailable types (reference @/.commitlintrc.json):\n\n- feat: A new feature ‚ú®\n- fix: A bug fix üêõ\n- docs: Documentation only changes üìö\n- style: Code formatting, white-space, missing semi-colons üíé\n- refactor: Code change that neither fixes a bug nor adds a feature üì¶\n- perf: Performance improvements üöÄ\n- test: Adding or correcting tests üö®\n- build: Build system or external dependencies changes üõ†\n- ci: CI configuration files and scripts changes ‚öôÔ∏è\n- chore: Other changes that don't modify src or test files ‚ôªÔ∏è\n- revert: Reverts a previous commit üóë\n- hotfix: Critical fix in production üöë\n- release: Release a new version üéâ\n- merge: Merge a branch into another üîÄ\n\nRules (reference @/.gitmessage):\n\n- Use lowercase for type and scope\n- Use imperative mood (\"add\" not \"added\")\n- No period at the end of description\n- Maximum 100 characters in header\n- Use scope when it helps identify the change area\n- Reference issues: \"fixes #123\" or \"closes #456\"\n- For breaking changes: add \"!\" after type or \"BREAKING CHANGE:\" in body\n\nExamples:\n\n- `feat: add OAuth authentication system`\n- `fix(auth): resolve session timeout issue`\n- `docs: update API documentation`\n- `style: format code according to style guide`",
    "github.copilot.enable": {
      "*": true,
      "yaml": true,
      "plaintext": true,
      "markdown": true,
      "scminput": true
    },
    "github.copilot.advanced": {
      "debug.overrideEngine": "copilot-chat",
      "debug.useNodeFetcher": true
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "prettier.requireConfig": true,
    "prettier.useEditorConfig": true,
    "[blade]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": false,
      "editor.insertSpaces": true,
      "editor.tabSize": 2
    },
    "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": false,
      "editor.insertSpaces": true,
      "editor.tabSize": 2
    },
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": false,
      "editor.insertSpaces": true,
      "editor.tabSize": 2
    },
    "[css]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": false,
      "editor.insertSpaces": true,
      "editor.tabSize": 2
    },
    "[scss]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": false,
      "editor.insertSpaces": true,
      "editor.tabSize": 2
    },
    "files.eol": "\n",
    "php.validate.enable": true,
    "php.validate.executablePath": "${workspaceFolder}/scripts/php-wrapper.sh",
    "php.validate.run": "onSave",
    "php.suggest.basic": false,
    "intelephense.files.maxSize": 5000000,
    "intelephense.files.exclude": [
      "**/.git/**",
      "**/node_modules/**",
      "**/vendor/**/{Test,test,Tests,tests}/**",
      "**/.lando/**",
      "**/wp/**",
      "**/content/cache/**"
    ],
    "intelephense.stubs": [
      "wordpress"
    ],
    "[php]": {
      "editor.defaultFormatter": "open-southeners.laravel-pint",
      "editor.formatOnSave": true,
      "editor.insertSpaces": true,
      "editor.tabSize": 4
    },
    "gitlens.hovers.detailsMarkdownFormat": "testing"
  },
  "extensions": {
    "recommendations": [
      "eamodio.gitlens",
      "ms-vscode.vscode-json",
      "streetsidesoftware.code-spell-checker",
      "vivaxy.vscode-conventional-commits",
      "bmewburn.vscode-intelephense-client",
      "wordpresstoolbox.wordpress-toolbox",
      "tungvn.wordpress-snippet",
      "junstyle.php-cs-fixer",
      "felixfbecker.php-debug",
      "esbenp.prettier-vscode",
      "dbaeumer.vscode-eslint",
      "bradlc.vscode-tailwindcss",
      "ms-azuretools.vscode-docker",
      "ms-vscode-remote.remote-containers",
      "ms-vscode.vscode-typescript-next",
      "formulahendry.auto-rename-tag",
      "christian-kohler.path-intellisense",
      "ms-vscode.vscode-todo-highlight",
      "mhutchie.git-graph",
      "pkief.material-icon-theme",
      "zhuangtongfa.material-theme",
      "xdebug.php-debug",
      "yzhang.markdown-all-in-one",
      "davidanson.vscode-markdownlint",
      "editorconfig.editorconfig",
      "ms-vscode.js-debug",
      "johnbillion.vscode-wordpress-hooks",
      "valeryanm.vscode-phpsab",
      "GitHub.copilot",
      "GitHub.copilot-chat",
      "ms-vscode-remote.remote-wsl",
      "Catppuccin.catppuccin-vsc",
      "sainnhe.everforest",
      "eamodio.gitlens",
      "mhutchie.git-graph",
      "vivaxy.vscode-conventional-commits",
      "esbenp.prettier-vscode",
      "dbaeumer.vscode-eslint",
      "editorconfig.editorconfig",
      "stylelint.vscode-stylelint",
      "bmewburn.vscode-intelephense-client",
      "bradlc.vscode-tailwindcss",
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "üöÄ Lando: Start",
        "type": "shell",
        "command": "lando",
        "args": [
          "start"
        ],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "isBackground": true,
        "problemMatcher": []
      },
      {
        "label": "üõë Lando: Stop",
        "type": "shell",
        "command": "lando",
        "args": [
          "stop"
        ],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "‚ÑπÔ∏è Lando: Info",
        "type": "shell",
        "command": "lando",
        "args": [
          "info"
        ],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üåê Yarn: Install (Node)",
        "type": "shell",
        "command": "lando",
        "args": [
          "yarn",
          "install"
        ],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üì¶ Composer: Install Dependencies",
        "type": "shell",
        "command": "lando",
        "args": [
          "composer",
          "install"
        ],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üóÑÔ∏è Redis CLI",
        "type": "shell",
        "command": "lando",
        "args": [
          "redis-cli"
        ],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üìù Conventional Commit (via Lando)",
        "type": "shell",
        "command": "lando",
        "args": [
          "git-cz"
        ],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üîç CommitLint: Check Last Commit",
        "type": "shell",
        "command": "lando",
        "args": [
          "commitlint-check"
        ],
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üìã Generate Changelog",
        "type": "shell",
        "command": "lando",
        "args": [
          "conventional-changelog"
        ],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üîß PHP: Fix Code Style (Pint)",
        "type": "shell",
        "command": "lando",
        "args": [
          "pint"
        ],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üîç PHP: Check Code Style (Pint)",
        "type": "shell",
        "command": "lando",
        "args": [
          "pint",
          "--test"
        ],
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": {
          "owner": "pint",
          "fileLocation": "absolute",
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error)\\s+-\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "severity": 4,
            "message": 5
          }
        }
      },
      {
        "label": "üèóÔ∏è Theme: Build Assets",
        "type": "shell",
        "command": "lando",
        "args": [
          "yarn",
          "build"
        ],
        "options": {
          "cwd": "${workspaceFolder}/content/themes/wordpress-dev"
        },
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üëÄ Theme: Watch Assets",
        "type": "shell",
        "command": "lando",
        "args": [
          "yarn",
          "dev"
        ],
        "options": {
          "cwd": "${workspaceFolder}/content/themes/wordpress-dev"
        },
        "group": "build",
        "isBackground": true,
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "üì¶ Theme: Composer Install",
        "type": "shell",
        "command": "lando",
        "args": [
          "composer",
          "install"
        ],
        "options": {
          "cwd": "${workspaceFolder}/content/themes/wordpress-dev"
        },
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      }
    ]
  }
}
